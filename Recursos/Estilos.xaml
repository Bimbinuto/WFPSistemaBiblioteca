<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:dg="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <!--  tipo de letra general  -->
    <Style x:Key="StyleLetras" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource ColorLetras}" />
    </Style>

    <!--  tipo de letra para Label  -->
    <Style
        x:Key="StyleLabel"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type Label}" />

    <!--  Style de letra para errores  -->
    <Style x:Key="StyleLabelAviso" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Foreground" Value="Red" />
    </Style>

    <!--  tipo de letra para TextBlock  -->
    <Style
        x:Key="StyleTextBlock"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type TextBlock}" />

    <!--  tipo de letra para TextBlock para Titulos (sin usar)  -->
    <Style x:Key="StyleTextBlockTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource ColorLetras}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <!--  tipo de letra para Label para Titulos (prueba)  -->
    <Style x:Key="StyleLabelTitle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource ColorLetras}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="20,10,0,10" />
    </Style>

    <!--  letra como marca de agua [no usado]  -->
    <Style x:Key="StyleMarcaAgua" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#CC707070" />
    </Style>

    <!--  Boton de General  -->
    <Style
        x:Key="ButtonLogin"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ColorGrisSemiTransparente1}" />
        <!--<Setter Property="Foreground" Value="{StaticResource ColorLetras}" />-->
        <Setter Property="BorderBrush" Value="{StaticResource btn-ColorBorde}" />
        <Setter Property="BorderThickness" Value="0.5,1.5,0.5,0.5" />
        <!--<Setter Property="FontSize" Value="15" />-->
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource bt-IsMouseOver-color}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bg-PressBtn}" />
                            <Setter Property="Foreground" Value="{DynamicResource fg-PressBtn}" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--  aproximacion a los buscado, pero sirve  -->
                            <Setter Property="Background" Value="{StaticResource bt-IsMouseOver-color}" />
                            <Setter Property="Foreground" Value="#808080" />
                            <Setter Property="BorderBrush" Value="#90A0A0A0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ESTILOS DE LOGIN-->
    <!--  Texbox Username  -->
    <Style
        x:Key="TextBoxStyleUsername"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="33" />
        <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox}" />
        <!--<Setter Property="Foreground" Value="{StaticResource ColorLetras}" />-->
        <!--<Setter Property="FontSize" Value="15" />-->
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="CaretBrush" Value="{StaticResource ColorCursor}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0.1,0.3" EndPoint="0.9,0">
                                <GradientStop x:Name="GS1" Offset="0.0" Color="{Binding Source={StaticResource ColorCrema}, Path=Color}" />
                                <GradientStop x:Name="GS2" Offset="1.0" Color="{Binding Source={StaticResource ColorCrema}, Path=Color}" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                            <Path
                                x:Name="Icon1"
                                Grid.Column="0"
                                Width="15"
                                Height="15"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Data="{StaticResource IconUser}"
                                Fill="{StaticResource ColorCremaOscuro}"
                                RenderTransformOrigin="0.5 0.5"
                                Stretch="Uniform" />

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />

                            <Label
                                x:Name="lbMarcaDeAgua"
                                Margin="-7,-1,0,0"
                                Content="{TemplateBinding Tag}"
                                FontSize="15"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="#CC707070"
                                Visibility="Collapsed" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="lbMarcaDeAgua" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon1" Property="Fill" Value="{StaticResource ColorCremaClaro}" />
                            <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox-isMouseOver}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="0.0"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="0.5"
                                            Duration="0:0:0.1" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#ffdece"
                                            Duration="0:0:0.1" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#935643"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="-0.1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#ffdece"
                                            Duration="0:0:0.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#ffdece"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="0.3,0.3,0.3,2" />
                            <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox-isFocused}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PasswordBox  -->
    <Style
        x:Key="TextBoxStylePassword"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type PasswordBox}">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="33" />
        <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox}" />
        <!--<Setter Property="Foreground" Value="{StaticResource ColorLetras}" />-->
        <!--<Setter Property="FontSize" Value="15" />-->
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="CaretBrush" Value="{StaticResource ColorCursor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0.1,0.3" EndPoint="0.9,0">
                                <GradientStop x:Name="GS1" Offset="0.0" Color="{Binding Source={StaticResource ColorCrema}, Path=Color}" />
                                <GradientStop x:Name="GS2" Offset="1.0" Color="{Binding Source={StaticResource ColorCrema}, Path=Color}" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <StackPanel Orientation="Horizontal">
                            <Path
                                x:Name="Icon2"
                                Width="15"
                                Height="15"
                                Margin="8,0,8,0"
                                VerticalAlignment="Center"
                                Data="{StaticResource IconPassword}"
                                Fill="{StaticResource ColorCremaOscuro}"
                                RenderTransformOrigin="0.5 0.5"
                                Stretch="Uniform" />
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon2" Property="Fill" Value="{StaticResource ColorCremaClaro}" />
                            <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox-isMouseOver}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="0.0"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="0.5"
                                            Duration="0:0:0.1" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#ffdece"
                                            Duration="0:0:0.1" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#935643"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="Stop">
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="-0.1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Offset)"
                                            To="1.0"
                                            Duration="0:0:0.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS1"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#ffdece"
                                            Duration="0:0:0.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="GS2"
                                            Storyboard.TargetProperty="(GradientStop.Color)"
                                            To="#ffdece"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="0.3,0.3,0.3,2" />
                            <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox-isFocused}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ColorBordeUsernameConCursor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Borde de la ventana Login  -->
    <Style x:Key="BorderWindow" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.1, 1" EndPoint="1.1, 0">
                    <GradientStop Offset="0" Color="{Binding Source={StaticResource ColorBordePrincipal1}, Path=Color}" />
                    <GradientStop Offset="1" Color="{Binding Source={StaticResource ColorBordePrincipal2}, Path=Color}" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Estilo del boton Cerrar y mas [general]  -->
    <Style x:Key="StyleButtonIcons" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Transparente}" />
        <Setter Property="Width" Value="43" />
        <Setter Property="Height" Value="34" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="BorderBrush" Value="{StaticResource OnAliceBlue}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="ToolTip" Value="Cerrar" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Path
                            x:Name="IconBar"
                            Width="12"
                            Height="12"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                            Fill="{StaticResource ColorBlanco}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Transparente1}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ColorGrisSemiTransparente2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion ESTILOS DE LOGIN-->

    <!--#region ESTILOS DEL MENU-->

    <!--  Botones de la barra superior  -->
    <Style x:Key="StyleButtonBarUp" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource bg-bt-barColor}" />
        <Setter Property="Width" Value="43" />
        <Setter Property="Height" Value="34" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="BorderBrush" Value="{StaticResource brsh-bt-barColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Path
                            x:Name="IconBar"
                            Width="11"
                            Height="11"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                            Fill="{StaticResource iFill-default-color}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource bg-bt-barColorTransparent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Diseño en general para los radiobuttons  -->
    <Style
        x:Key="DesignButton"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="{StaticResource brsh-color}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Background" Value="{StaticResource bg-color}" />
        <Setter Property="Margin" Value="5,2,0,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="RButtonBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6">
                        <StackPanel Orientation="Horizontal">
                            <Line
                                x:Name="lineaPrueba"
                                Stroke="{StaticResource st-line}"
                                StrokeThickness="4"
                                Visibility="Hidden"
                                X1="5"
                                X2="5"
                                Y1="39"
                                Y2="10" />
                            <Path
                                x:Name="Icon"
                                Width="21"
                                Height="21"
                                Margin="12,0,20,0"
                                VerticalAlignment="Center"
                                Data="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                Fill="{StaticResource iFill-color}"
                                RenderTransformOrigin="0.5 0.5"
                                Stretch="Uniform">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </Path.RenderTransform>
                            </Path>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource bg-overBt-color}" />
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource iFill-over-color}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1.15"
                                            Duration="0:0:0.1" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1.15"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="1"
                                            Duration="0:0:0.15" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="Icon"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="1"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource bg-ck-color}" />
                            <Setter TargetName="lineaPrueba" Property="Visibility" Value="Visible" />
                            <!--<Setter TargetName="Icon" Property="Fill" Value="{StaticResource iFill-default-color}" />-->
                            <Setter TargetName="Icon" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.2,0.2" EndPoint="0.9,1">
                                        <GradientStop Offset="0.09" Color="#BB3D23" />
                                        <GradientStop Offset="0.9" Color="#FFDECE" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Diseño en general para los radiobuttons de 'modo simple descriptivo'  -->


    <!--  Estilo del Icono de conexion a la base de datos  -->
    <!--<Style x:Key="IconChangedConexion" TargetType="{x:Type Path}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding EstaConectado}" Value="True">
                <Setter Property="Data" Value="{StaticResource BDConectado}" />
                <Setter Property="ToolTip" Value="Conectado a la Base de Datos" />
            </DataTrigger>
            <DataTrigger Binding="{Binding EstaConectado}" Value="False">
                <Setter Property="Data" Value="{StaticResource BDDesconectado}" />
                <Setter Property="ToolTip" Value="Error de Conexion" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->
    <Style x:Key="IconChangedConexion" TargetType="{x:Type Path}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding EstaConectado}" Value="True">
                <Setter Property="Data" Value="{StaticResource BDConectado}" />
                <Setter Property="ToolTip" Value="Conectado a la Base de Datos" />
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.3" EndPoint="1,1">
                            <GradientStop Color="Green" Offset="0.0" />
                            <GradientStop Color="LightGreen" Offset="0.58" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding EstaConectado}" Value="False">
                <Setter Property="Data" Value="{StaticResource BDDesconectado}" />
                <Setter Property="ToolTip" Value="Error de Conexion" />
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Color="DarkRed" Offset="0.0" />
                            <GradientStop Color="Red" Offset="0.58" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!--#endregion ESTILOS DEL MENU-->

    <!--#region ESTILO DEL SCROLLBAR-->

    <!--  PARA LOS SCROLLBARS  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Grid">
                        <Rectangle
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent" />
                        <Border
                            x:Name="Rectangle1"
                            Width="Auto"
                            Height="Auto"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  SCROLLBARS  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Foreground" Value="#FCFCDA" />
        <Setter Property="Background" Value="DarkGray" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="GridRoot"
                        Width="8"
                        Background="{x:Null}">
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            Focusable="False"
                            IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Focusable="False"
                                    Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Focusable="False"
                                    Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonSelectBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource DarkBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="10" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ESTILO DEL SCROLLBAR-->

    <!--#region ESTILO DEL CALENDARIO-->

    <!--  ESTILO DEL CALENDARIO  -->
    <Style x:Key="CalendarStyle1" TargetType="{x:Type Calendar}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Background" Value="#10FFFFFF">
            <!--<Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFE4EAF0" Offset="0" />
                <GradientStop Color="#FFECF0F4" Offset="0.16" />
                <GradientStop Color="#FFFCFCFD" Offset="0.16" />
                <GradientStop Color="#FFFFFFFF" Offset="1" />
            </LinearGradientBrush>
        </Setter.Value>-->
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFA3AEB9" Offset="0"/>
                <GradientStop Color="#FF8399A9" Offset="0.375"/>
                <GradientStop Color="#FF718597" Offset="0.375"/>
                <GradientStop Color="#FF617584" Offset="1"/>
            </LinearGradientBrush>-->
                <LinearGradientBrush StartPoint="0, 0.1" EndPoint="2, 0">
                    <GradientStop Offset="0" Color="#993D23" />
                    <GradientStop Offset="1" Color="#fcfcda" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem
                            x:Name="PART_CalendarItem"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ESTILO DE LOS BOTONES DEL CALENDARIO  -->
    <Style x:Key="CalendarButtonStyle1" TargetType="{x:Type CalendarButton}">
        <Setter Property="Background" Value="#BB3D23" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarButton}">
                    <Grid>
                        <!--  borde del rectagulo seleccionado  -->
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3" />
                        <!--  borde del rectangulo de los meses en seleccion  -->
                        <Rectangle
                            x:Name="Background"
                            Fill="{TemplateBinding Background}"
                            Opacity="0"
                            RadiusX="3"
                            RadiusY="3" />
                        <!--  color del texto de la ventana de meses y años  -->
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="16,33,15,33"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextElement.Foreground="#ffffff" />
                        <!--  color del borde de la seleccion  -->
                        <Rectangle
                            x:Name="CalendarButtonFocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="3"
                            RadiusY="3"
                            Stroke="#fcdcda"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Background"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF777777"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="CalendarButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="CalendarButtonFocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ESTILO DE LOS BOTONES DE LOS DIAS DEL CALENDARIO  -->
    <Style x:Key="CalendarDayButtonStyle1" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <!--  fondo del dia actual  -->
                        <Rectangle
                            x:Name="TodayBackground"
                            Fill="#80ff0007"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2" />
                        <!--  fondo del dia seleccionado  -->
                        <Rectangle
                            x:Name="SelectedBackground"
                            Fill="#BB3D23"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2" />
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <!--  fondo del dia por seleccionar  -->
                        <Rectangle
                            x:Name="HighlightBackground"
                            Fill="#70fcfcda"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2" />
                        <!--  letra de los dias del calendario y separacion de dias  -->
                        <ContentPresenter
                            x:Name="NormalText"
                            Margin="10"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextElement.Foreground="#ffffff" />
                        <Path
                            x:Name="Blackout"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                            Fill="#FF000000"
                            Opacity="0"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill" />
                        <!--  borde del dia seleccionado  -->
                        <Rectangle
                            x:Name="DayButtonFocusVisual"
                            IsHitTestVisible="false"
                            RadiusX="2"
                            RadiusY="2"
                            Stroke="#fcfcda"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="HighlightBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".35"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SelectedBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".75"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DayButtonFocusVisual"
                                            Storyboard.TargetProperty="Visibility"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FF777777"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="TodayBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ColorAnimation
                                            Storyboard.TargetName="NormalText"
                                            Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                            To="#FFFFFFFF"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Blackout"
                                            Storyboard.TargetProperty="Opacity"
                                            To=".2"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ESTILO DE LOS ITEMS DEL CALENDARIO  -->
    <Style x:Key="CalendarItemStyle1" TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock
                                Margin="0,6,0,6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="Verdana"
                                FontSize="9.5"
                                FontWeight="Bold"
                                Foreground="#FFFFFF"
                                Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <!--  modificador de los bordes del calendario  -->
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                            <!--  semimodificador del borde interno del calendario  -->
                            <Border
                                BorderBrush="#00ffffff"
                                BorderThickness="2"
                                CornerRadius="5">
                                <Grid>
                                    <Grid.Resources>
                                        <!--  boton izquierdo (previo)  -->
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Fill="#15E5EBF1"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Width="6"
                                                        Height="10"
                                                        Margin="5"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Data="M15.7071 4.29289C16.0976 4.68342 16.0976 5.31658 15.7071 5.70711L9.41421 12L15.7071 18.2929C16.0976 18.6834 16.0976 19.3166 15.7071 19.7071C15.3166 20.0976 14.6834 20.0976 14.2929 19.7071L7.29289 12.7071C7.10536 12.5196 7 12.2652 7 12C7 11.7348 7.10536 11.4804 7.29289 11.2929L14.2929 4.29289C14.6834 3.90237 15.3166 3.90237 15.7071 4.29289Z"
                                                        Fill="#FFFFFFFF"
                                                        Stretch="Fill" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="#40FFFFFF"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                        <!--  boton derecho (siguiente)  -->
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Fill="#15E5EBF1"
                                                    Opacity="1"
                                                    Stretch="Fill" />
                                                <Grid>
                                                    <Path
                                                        x:Name="path"
                                                        Width="6"
                                                        Height="10"
                                                        Margin="5"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Data="M8.29289 4.29289C8.68342 3.90237 9.31658 3.90237 9.70711 4.29289L16.7071 11.2929C17.0976 11.6834 17.0976 12.3166 16.7071 12.7071L9.70711 19.7071C9.31658 20.0976 8.68342 20.0976 8.29289 19.7071C7.90237 19.3166 7.90237 18.6834 8.29289 18.2929L14.5858 12L8.29289 5.70711C7.90237 5.31658 7.90237 4.68342 8.29289 4.29289Z"
                                                        Fill="#FFFFFFFF"
                                                        Stretch="Fill" />
                                                </Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                    To="#40FFFFFF"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="path"
                                                                    Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                        <!--  boton superior fecha mes  -->
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle
                                                    Margin="5"
                                                    Fill="#15E5EBF1"
                                                    Opacity="1"
                                                    Stretch="UniformToFill" />
                                                <ContentPresenter
                                                    x:Name="buttonContent"
                                                    Margin="0,0,0,0"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    TextElement.Foreground="#FFFFFFFF" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                                    To="#40FFFFFF"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetName="buttonContent"
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To=".5"
                                                                    Duration="0" />
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="175" />
                                        <ColumnDefinition Width="30" />
                                        <ColumnDefinition Width="40" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>


                                    <Button
                                        x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Focusable="False"
                                        FontSize="13"
                                        FontWeight="Bold"
                                        Template="{StaticResource HeaderButtonTemplate}" />
                                    <Button
                                        x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        Focusable="False"
                                        Template="{StaticResource PreviousButtonTemplate}" />
                                    <Button
                                        x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Width="30"
                                        Height="30"
                                        HorizontalAlignment="Center"
                                        Focusable="False"
                                        Template="{StaticResource NextButtonTemplate}" />

                                    <Grid
                                        x:Name="PART_MonthView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="1"
                                        HorizontalAlignment="Center"
                                        Visibility="Visible">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid
                                        x:Name="PART_YearView"
                                        Grid.Row="1"
                                        Grid.ColumnSpan="3"
                                        Margin="6,-3,7,6"
                                        HorizontalAlignment="Center"
                                        Visibility="Hidden">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle
                            x:Name="PART_DisabledVisual"
                            Fill="{StaticResource DisabledColor}"
                            Opacity="0"
                            RadiusX="2"
                            RadiusY="2"
                            Stretch="Fill"
                            Stroke="{StaticResource DisabledColor}"
                            StrokeThickness="1"
                            Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_DisabledVisual"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_DisabledVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ESTILO DEL CALENDARIO-->

    <!--  Texbox Username  -->
    <Style
        x:Key="tbxStyleGeneral"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="33" />
        <Setter Property="Margin" Value="0,7,0,3.95" />
        <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorCrema}" />
        <Setter Property="BorderThickness" Value="0,0,0,1.7" />
        <Setter Property="CaretBrush" Value="{StaticResource ColorCursor}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Tranparencia-TextboxGen-isMouseOver2}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="0.3,0.3,0.3,2" />
                            <Setter Property="BorderBrush" Value="LightBlue" />
                            <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox-isFocused}" />
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding PuedeRegistrar}" Value="False">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PasswordBox Contraseñas  -->
    <Style
        x:Key="PassStyleGeneral"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type PasswordBox}">
        <Setter Property="Width" Value="250" />
        <Setter Property="Height" Value="33" />
        <Setter Property="Margin" Value="0,7,0,3.95" />
        <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorCrema}" />
        <Setter Property="BorderThickness" Value="0,0,0,1.7" />
        <Setter Property="CaretBrush" Value="{StaticResource ColorCursor}" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Tranparencia-TextboxGen-isMouseOver2}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderThickness" Value="0.3,0.3,0.3,2" />
                            <Setter Property="BorderBrush" Value="LightBlue" />
                            <Setter Property="Background" Value="{StaticResource Tranparencia-Textbox-isFocused}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style General ComboBox  -->

    <!--#region originalmente de RegistrarBibliotecario-->
    <Style x:Key="btBarSuperior" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource ColorLetras}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="25,10,0,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#B0B0B0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ESTILO DEL COMBOBOX-->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                BorderBrush="{StaticResource ColorCrema}"
                BorderThickness="0.3,0.3,0.3,1.8"
                CornerRadius="5"
                SnapsToDevicePixels="True" />
            <Grid Grid.Column="1" Margin="0,0,5,0">
                <!--<Path
                    x:Name="Arrow"
                    Data="{StaticResource IconAbajo2}"
                    Fill="{StaticResource ColorCrema}"
                    Margin="10,0,10,0"
                    Stretch="UniformToFill"

                    Height="8"
                    Width="15"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />-->
                <Image
                    Width="25"
                    Height="25"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Source="\Recursos\imgAbajo.png"
                    Stretch="UniformToFill" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
            -->
            <!--<Setter Property="Background" Value="{StaticResource Tranparencia-TextboxGen-isMouseOver2}"/>-->
            <!--
                <Setter Property="Fill" Value="{StaticResource ColorCremaOscuro}" TargetName="Arrow" />
            </Trigger>-->
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ColorCremaOscuro}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="0.3,0.3,0.3,0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style
        x:Key="ComboBoxStyle1"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="33" />
        <Setter Property="Width" Value="250" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,7,0,3.95" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="11,0,25,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsEnabled="True"
                            IsHitTestVisible="False" />
                        <Label
                            x:Name="Watermark"
                            Padding="10,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Tag}"
                            FontFamily="Segoe UI"
                            FontSize="15"
                            Foreground="{StaticResource ColorLetras}"
                            Visibility="Collapsed" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Focusable="True"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            x:Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                x:Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource ColorNegro}"
                                    BorderBrush="{StaticResource ColorCremaOscuro}"
                                    BorderThickness="1" />
                                <ScrollViewer
                                    Margin="4,6,4,6"
                                    FontFamily="Segoe UI"
                                    FontSize="15"
                                    Foreground="{StaticResource ColorLetras}"
                                    OverridesDefaultStyle="True"
                                    SnapsToDevicePixels="True" />
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion ESTILO DEL COMBOBOX-->

    <!--  ESTILO DEL DATEPICKER  -->
    <Style x:Key="StyleCalendarButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource Transparente}" />
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{StaticResource OnAliceBlue}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        x:Name="ArrowImage"
                        Width="23"
                        Height="23"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Source="\Recursos\imgCalendar2.png"
                        Stretch="UniformToFill" />
                    <!--<Path
                        x:Name="IconBar"
                        Width="20"
                        Height="20"
                        Data="{StaticResource IconCalendario2}"
                        Fill="{StaticResource iFill-default-color}"
                        Stretch="UniformToFill"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center" />-->
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="IconBar" Property="Fill" Value="{StaticResource ColorCremaOscuro}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DatePickerStyle"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type DatePicker}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Grid.ColumnSpan="2"
                            Width="250"
                            Height="33"
                            Padding="0,0,0,0"
                            Background="{StaticResource Tranparencia-Textbox}"
                            BorderBrush="{StaticResource ColorCrema}"
                            BorderThickness="0,0,0,1.8"
                            CornerRadius="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <DatePickerTextBox
                                    x:Name="PART_TextBox"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource tbxStyleGeneral}" />
                                <Button
                                    x:Name="PART_Button"
                                    Grid.Column="1"
                                    Style="{StaticResource StyleCalendarButton}" />
                                <Popup
                                    x:Name="PART_Popup"
                                    AllowsTransparency="True"
                                    HorizontalOffset="17"
                                    Placement="Bottom"
                                    PlacementTarget="{Binding ElementName=PART_TextBox}"
                                    StaysOpen="False" />
                                <!--<Label
                                        x:Name="Watermark"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        Foreground="#90B0B0B0"
                                        Visibility="Collapsed"
                                        Padding="11,0,20,0"
                                        Content="{TemplateBinding Tag}"
                                        FontFamily="Segoe UI"
                                        FontSize="15" />-->
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value="" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" TargetName="Watermark" />
                            </MultiTrigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="LightBlue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ESTILO DEL CALENDARIO DEL DATEPICKER  -->
    <Style x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}">
        <Setter Property="Foreground" Value="{StaticResource ColorLetras}" />
        <Setter Property="Background" Value="{StaticResource ColorBlanco}" />
        <Setter Property="BorderBrush" Value="{StaticResource ColorBordePrincipal1}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                        <CalendarItem
                            x:Name="PART_CalendarItem"
                            Margin="0,5,0,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion originalmente de RegistrarBibliotecario-->

    <!--#region ESTILO COMPLETO DEL DATAGRID-->
    <LinearGradientBrush x:Key="gradientedata" Opacity="0.95" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.1" Color="#007F7FE6" />
        <GradientStop Offset="1.5" Color="#00FFFFFF" />
    </LinearGradientBrush>
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="Border"
                            Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                            SnapsToDevicePixels="True" />
                        <Polygon
                            x:Name="Arrow"
                            Margin="8,8,3,3"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Fill="Black"
                            Opacity="0.15"
                            Points="0,10 10,10 10,0"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="DataGridStyle1"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="#10FFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource brsh-menu-Gradient}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5 5 5 5"
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                          TypeInTargetAssembly={x:Type DataGrid}}}"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter
                                            x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter
                                            x:Name="PART_ScrollContentPresenter"
                                            Grid.Row="1"
                                            Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            Style="{DynamicResource myScrollbar}"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar
                                                x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="DataGridCellStyle1"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0,6,6,0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="DataGridColumnHeaderStyle1"
        BasedOn="{StaticResource StyleLetras}"
        TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,2,2" />
        <Setter Property="Background" Value="#30FCDADA" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <dg:DataGridHeaderBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsClickable="{TemplateBinding CanUserSort}"
                            IsHovered="{TemplateBinding IsMouseOver}"
                            IsPressed="{TemplateBinding IsPressed}"
                            SeparatorBrush="{TemplateBinding SeparatorBrush}"
                            SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                            SortDirection="{TemplateBinding SortDirection}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </dg:DataGridHeaderBorder>
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="#20FFFFFF" />
        <Setter Property="Margin" Value="0,1,0,1" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        Foreground="Red"
                        Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border
                        x:Name="DGR_Border"
                        Padding="0,10"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.RowSpan="2"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#10FFFFFF" />
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#17FFFFFF" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#40FFFFFF" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#60FFFFDA" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="scrorbargradiente" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Offset="0.1" Color="#FCDADA" />
        <GradientStop Offset="1.5" Color="#FFFFFF" />
    </LinearGradientBrush>

    <!--<Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
    <Setter Property="Background" Value="Transparent" />

    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
                <Grid x:Name="Grid">
                    <Rectangle
                        x:Name="Rectangle1"
                        Width="8"
                        Height="auto"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Fill="{TemplateBinding Background}"
                        RadiusX="5"
                        RadiusY="5" />
                </Grid>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>-->

    <Style x:Key="myScrollbar" TargetType="ScrollBar">
        <Setter Property="Background" Value="#40FFFFFF" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="gridroot"
                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <!--<RepeatButton
                        Visibility="Hidden"
                        x:Name="DecreaseRepeat"
                        Command="ScrollBar.LineUpCommand"
                        Foreground="Transparent"
                        Style="{DynamicResource ScrollButton}">
                            <Path
                            x:Name="DecreaseArrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="F1 M 3.5,0L 0,7L 7,7l 3.5,0 Z"
                            Fill="Black" />

                        </RepeatButton>-->
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="1"
                            Focusable="False"
                            IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="#FCDADA"
                                    Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>

                        </Track>
                        <!--<RepeatButton
                        Visibility="Hidden"
                        x:Name="IncreaseRepead"
                        Grid.Row="2"
                        Command="ScrollBar.LineDownCommand"
                        Foreground="Transparent"
                        Style="{DynamicResource ScrollButton}">
                            <Path
                            x:Name="IncreaseArrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="F1 M 3.5,7l 7,0L 0,0L 3.5,7 Z"
                            Fill="Black" />

                        </RepeatButton>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ESTILO COMPLETO DEL DATAGRID-->


</ResourceDictionary>